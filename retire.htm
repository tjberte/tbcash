<!DOCTYPE html>
<html>
<head>
    <style>
        body {
            font-family: system-ui, -apple-system, sans-serif;
            max-width: 800px;
            margin: 30px auto;
            padding: 20px;
            background-color: #f5f5f5;
        }
        .calculator {
            background: white;
            padding: 30px;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }
        .form-group {
            margin-bottom: 20px;
        }
        label {
            display: block;
            margin-bottom: 8px;
            font-weight: 500;
            color: #333;
        }
        input, select {
            width: 100%;
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 4px;
            font-size: 16px;
        }
        button {
            background-color: #0066cc;
            color: white;
            border: none;
            padding: 12px 24px;
            border-radius: 4px;
            cursor: pointer;
            font-size: 16px;
            width: 100%;
        }
        button:hover {
            background-color: #0052a3;
        }
        .results {
            margin-top: 30px;
            padding: 20px;
            background-color: #f8f9fa;
            border-radius: 4px;
            display: none;
        }
        .error {
            color: red;
            font-size: 14px;
            margin-top: 4px;
            display: none;
        }
        .growth-table {
            margin-top: 30px;
            width: 100%;
            border-collapse: collapse;
        }
        .growth-table th, .growth-table td {
            padding: 8px;
            text-align: right;
            border: 1px solid #ddd;
        }
        .growth-table th {
            background-color: #f8f9fa;
            font-weight: 500;
        }
        .growth-table tr:nth-child(even) {
            background-color: #f8f9fa;
        }
        .table-container {
            margin-top: 30px;
            overflow-x: auto;
        }
        .positive-return {
            color: #28a745;
        }
        .export-button {
            background-color: #28a745;
            color: white;
            border: none;
            padding: 12px 24px;
            border-radius: 4px;
            cursor: pointer;
            font-size: 16px;
            margin-top: 20px;
            width: auto;
            display: inline-block;
        }
        .export-button:hover {
            background-color: #218838;
        }
        .button-container {
            margin-top: 20px;
            text-align: right;
        }
        /* Additional styles for better summary display */
        .results h3 {
            margin-top: 0;
            color: #333;
        }
        .results p {
            margin: 10px 0;
            font-size: 16px;
        }
        .results span {
            font-weight: 500;
            color: #0066cc;
        }
    </style>
</head>
<body>
    <div class="calculator">
        <h2>Retirement Calculator</h2>
        <div class="form-group">
            <label for="currentSavings">Currently Saved ($)</label>
            <input type="number" id="currentSavings" min="0" step="1000">
            <div class="error" id="currentSavingsError">Please enter a valid amount</div>
        </div>
        
        <div class="form-group">
            <label for="monthlySalary">Monthly Salary ($)</label>
            <input type="number" id="monthlySalary" min="0" step="100">
            <div class="error" id="monthlySalaryError">Please enter a valid salary</div>
        </div>
        
        <div class="form-group">
            <label for="salaryRaise">Annual Salary Raise (%)</label>
            <input type="number" id="salaryRaise" min="0" max="100" step="0.1">
            <div class="error" id="salaryRaiseError">Please enter a valid percentage</div>
        </div>
        
        <div class="form-group">
            <label for="compounding">Compounding Frequency</label>
            <select id="compounding">
                <option value="12">Monthly</option>
                <option value="4">Quarterly</option>
                <option value="1">Annually</option>
            </select>
        </div>
        
        <div class="form-group">
            <label for="contribution">Contribution (% of salary)</label>
            <input type="number" id="contribution" min="0" max="100" step="0.1">
            <div class="error" id="contributionError">Please enter a valid percentage</div>
        </div>
        
        <div class="form-group">
            <label for="employerMatch">Employer Match (%)</label>
            <input type="number" id="employerMatch" min="0" max="100" step="0.1">
            <div class="error" id="employerMatchError">Please enter a valid percentage</div>
        </div>
        
        <div class="form-group">
            <label for="returnRate">Expected Annual Return Rate (%)</label>
            <input type="number" id="returnRate" min="0" max="100" step="0.1">
            <div class="error" id="returnRateError">Please enter a valid percentage</div>
        </div>
        
        <div class="form-group">
            <label for="years">Years Until Retirement</label>
            <input type="number" id="years" min="1" max="100">
            <div class="error" id="yearsError">Please enter a valid number of years</div>
        </div>
        
        <button onclick="calculateRetirement()">Calculate</button>
        
        <div class="results" id="results">
            <h3>Retirement Savings Projection</h3>
            <p>Total Savings at Retirement: $<span id="totalSavings">0</span></p>
            <p>Total Contributions: $<span id="totalContributions">0</span></p>
            <p>Total Employer Contributions: $<span id="totalEmployerContributions">0</span></p>
            <p>Total Investment Returns: $<span id="totalReturns">0</span></p>
            
            <div class="table-container">
                <table class="growth-table">
                    <thead>
                        <tr>
                            <th>Year</th>
                            <th>Age</th>
                            <th>Yearly Salary</th>
                            <th>Your Contribution</th>
                            <th>Employer Match</th>
                            <th>Investment Returns</th>
                            <th>Year-End Balance</th>
                        </tr>
                    </thead>
                    <tbody id="growthTableBody">
                    </tbody>
                </table>
            </div>
            
            <div class="button-container">
                <button class="export-button" onclick="exportToCSV()">Export to CSV</button>
            </div>
        </div>
    </div>

    <script>
        // Previous JavaScript remains exactly the same
        function validateInputs() {
            const inputs = {
                currentSavings: document.getElementById('currentSavings').value,
                monthlySalary: document.getElementById('monthlySalary').value,
                salaryRaise: document.getElementById('salaryRaise').value,
                contribution: document.getElementById('contribution').value,
                employerMatch: document.getElementById('employerMatch').value,
                returnRate: document.getElementById('returnRate').value,
                years: document.getElementById('years').value
            };

            let isValid = true;
            
            for (let [key, value] of Object.entries(inputs)) {
                const error = document.getElementById(`${key}Error`);
                if (!value || value < 0) {
                    error.style.display = 'block';
                    isValid = false;
                } else {
                    error.style.display = 'none';
                }
            }

            return isValid;
        }

        function formatCurrency(amount) {
            return amount.toLocaleString('en-US', {
                style: 'currency',
                currency: 'USD',
                minimumFractionDigits: 0,
                maximumFractionDigits: 0
            });
        }

        function exportToCSV() {
            const tableBody = document.getElementById('growthTableBody');
            const rows = tableBody.getElementsByTagName('tr');
            
            let csvContent = "Year,Calendar Year,Yearly Salary,Your Contribution,Employer Match,Investment Returns,Year-End Balance\n";
            
            for (const row of rows) {
                const cells = row.getElementsByTagName('td');
                const rowData = Array.from(cells).map(cell => {
                    return cell.textContent.replace(/[$,]/g, '');
                });
                csvContent += rowData.join(',') + '\n';
            }
            
            const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });
            const link = document.createElement('a');
            const url = URL.createObjectURL(blob);
            
            link.setAttribute('href', url);
            link.setAttribute('download', 'retirement_projection.csv');
            link.style.visibility = 'hidden';
            
            document.body.appendChild(link);
            link.click();
            document.body.removeChild(link);
        }

        function calculateRetirement() {
            if (!validateInputs()) return;

            const currentSavings = parseFloat(document.getElementById('currentSavings').value);
            const monthlySalary = parseFloat(document.getElementById('monthlySalary').value);
            const salaryRaise = parseFloat(document.getElementById('salaryRaise').value) / 100;
            const compoundingFrequency = parseInt(document.getElementById('compounding').value);
            const contributionRate = parseFloat(document.getElementById('contribution').value) / 100;
            const employerMatch = parseFloat(document.getElementById('employerMatch').value) / 100;
            const returnRate = parseFloat(document.getElementById('returnRate').value) / 100;
            const years = parseInt(document.getElementById('years').value);

            let totalSavings = currentSavings;
            let currentSalary = monthlySalary * 12;
            let totalContributions = 0;
            let totalEmployerContributions = 0;
            let yearlyData = [];
            
            for (let year = 1; year <= years; year++) {
                const yearStart = totalSavings;
                const yearlyContribution = currentSalary * contributionRate;
                const yearlyEmployerContribution = Math.min(yearlyContribution, currentSalary * employerMatch);
                
                totalContributions += yearlyContribution;
                totalEmployerContributions += yearlyEmployerContribution;

                // Add contributions and calculate returns
                for (let period = 0; period < compoundingFrequency; period++) {
                    const periodContribution = (yearlyContribution + yearlyEmployerContribution) / compoundingFrequency;
                    totalSavings += periodContribution;
                    totalSavings *= (1 + (returnRate / compoundingFrequency));
                }

                const yearlyReturn = totalSavings - yearStart - yearlyContribution - yearlyEmployerContribution;

                yearlyData.push({
                    year,
                    salary: currentSalary,
                    contribution: yearlyContribution,
                    employerMatch: yearlyEmployerContribution,
                    returns: yearlyReturn,
                    balance: totalSavings
                });

                // Increase salary for next year
                currentSalary *= (1 + salaryRaise);
            }

            const totalReturns = totalSavings - totalContributions - totalEmployerContributions - currentSavings;

            // Display results
            document.getElementById('results').style.display = 'block';
            document.getElementById('totalSavings').textContent = Math.round(totalSavings).toLocaleString();
            document.getElementById('totalContributions').textContent = Math.round(totalContributions).toLocaleString();
            document.getElementById('totalEmployerContributions').textContent = Math.round(totalEmployerContributions).toLocaleString();
            document.getElementById('totalReturns').textContent = Math.round(totalReturns).toLocaleString();

            // Update growth table
            const tableBody = document.getElementById('growthTableBody');
            tableBody.innerHTML = '';
            
            yearlyData.forEach(data => {
                const row = document.createElement('tr');
                row.innerHTML = `
                    <td>${data.year}</td>
                    <td>${new Date().getFullYear() + data.year}</td>
                    <td>${formatCurrency(data.salary)}</td>
                    <td>${formatCurrency(data.contribution)}</td>
                    <td>${formatCurrency(data.employerMatch)}</td>
                    <td class="positive-return">${formatCurrency(data.returns)}</td>
                    <td>${formatCurrency(data.balance)}</td>
                `;
                tableBody.appendChild(row);
            });
        }
    </script>
</body>
</html>
